from pygame import *

class GameSrite(sprite.Sprite):
      def __init__(self, filename, x, y, speed, width, height):
          super().__init__()
          self.image = transform.scale(image.load(filename),(width, height))
          self.speed = speed
          self.rect = self.image.get_rect()
          self.rect.x = x
          self.rect.y = y
  
      def reset(self):
          window.blit(self.image, (self.rect.x, self.rect.y))
class Player(GameSrite):
    def update(self):
        key_presed = key.get_pressed()
        if key_presed[K_s] and self.rect.y < height - self.image.get_height():
            self.rect.y += self.speed
        if key_presed[K_w] and self.rect.y > 0:
            self.rect.y -= self.speed   
class Enemy(GameSrite):
    def update(self):
        key_presed = key.get_pressed()
        if key_presed[K_e] and self.rect.y < height - self.image.get_height():
            self.rect.y +=self.speed
        if key_presed[K_d] and self.rect.y > 0:
            self.rect.y -= self.speed
class Ball(GameSrite):
    def update(self):
        global lost
        self.rect.y += self.speed
        if self.rect.y > height or self.rect.y < 0:
            self.seed *= -1


width = 900
height = 500

window = display.set_mode((width,height))
display.set_caption('a')
background = transform.scale(image.load('backgound.png'),(width,height))
clock = time.Clock()
FPS = 60

player1 = Player('player1.jpg', 20, 200, 10, 25, 100)
player2 = Enemy('player1.jpg', 850, 200, 10, 25, 100)
ball = Ball('player1.jpg', 450, 250, 3, 20,20)

game = True
finish = False
while game:
    for e in event.get():
        if e.type == QUIT:
            game = False

    if finish!=True:
        window.blit(background,(0,0))
        player1.reset()
        player1.update()
        ball.reset()
        ball.update()
        player2.reset()
        ball.update()


        
    
    display.update()
    clock.tick(FPS)










class Player(GameSprite):
    def __init__(self, x, y, image, up_key, down_key):
        super().__init__(image, x, y)
        self.up_key = up_key
        self.down_key = down_key

    def update(self, keys):
        if keys[self.up_key]:
            self.rect.y -= 10
        elif keys[self.down_key]:
            self.rect.y += 10

        # Ограничиваем положение ракеток экраном
        if self.rect.top < 0:
            self.rect.top = 0
        elif self.rect.bottom > HEIGHT:
            self.rect.bottom = HEIGHT

class Ball(GameSprite):
    def __init__(self, x, y, image, speed_x=5, speed_y=5):
        super().__init__(image, x, y, speed_x, speed_y)

    def update(self):
        super().update()
        
        # Проверка границ экрана
        if self.rect.left < 0 or self.rect.right > WIDTH:
            self.speed_x *= -1
        if self.rect.top < 0 or self.rect.bottom > HEIGHT:
            self.speed_y *= -1
